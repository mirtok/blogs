(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{560:function(t,s,n){"use strict";n.r(s);var a=n(10),e=Object(a.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h3",{attrs:{id:"nginx-安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#nginx-安装"}},[t._v("#")]),t._v(" nginx 安装")]),t._v(" "),n("ol",[n("li",[t._v("下载\nwget-c https://nginx.org/download/nginx-1.10.1.tar.gz")]),t._v(" "),n("li",[t._v("解压 nginx-1.10.1.tar.gz 到 /usr/local目录下；\ntar -zxvf nginx-1.10.1.tar.gz -C /usr/local/")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 安装nginx的依赖库")]),t._v("\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gcc-c++\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pcre\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" pcre-devel\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" zlib\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" zlib-devel\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" openssl\nyum "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" openssl-devel\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#进入nginx解压的目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/nginx-1.10.1   ell /  \n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 配置")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 其实在 nginx-1.10.1 版本中你就不需要去配置相关东西，默认就可以了。当然，如果你要自己配置目录也是可以的。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 使用默认配置")]),t._v("\n./configure\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 自定义配置(不推荐)")]),t._v("\n./configure "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--prefix"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--conf-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/conf/nginx.conf "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--pid-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/conf/nginx.pid "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--lock-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/lock/nginx.lock "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--error-log-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/log/nginx/error.log "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-log-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/log/nginx/access.log "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--with-http_gzip_static_module "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-client-body-temp-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/client "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-proxy-temp-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/proxy "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-fastcgi-temp-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/fastcgi "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-uwsgi-temp-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/uwsgi "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n--http-scgi-temp-path"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/var/temp/nginx/scgi\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 注: 将临时文件目录指定为/var/temp/nginx，需要在/var下创建temp及nginx目录")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 编译")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("make")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v("\n")])])]),n("ol",{attrs:{start:"3"}},[n("li",[t._v("查找安装路径\n"),n("ul",[n("li",[t._v("whereis nginx (默认路径在 /usr/local/nginx)目录下面")])])]),t._v(" "),n("li",[t._v("启动,停止nginx")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" /usr/local/nginx/sbin/ \n./nginx \n./nginx -s stop "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此方式相当于先查出nginx进程id再使用kill命令强制杀掉进程。")]),t._v("\n./nginx -s quit "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#此方式停止步骤是待nginx进程处理任务完毕进行停止。")]),t._v("\n./nginx -s reload \n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#查询nginx 进程")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("ps")]),t._v(" aux"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("grep")]),t._v(" nginx\n")])])]),n("p",[n("img",{attrs:{src:"http://www.lxit365.com/fileUpload/static/upload/image/20200904/511990e615b742ef9eac3df63d74fc0b.png",alt:"QQ截图20200904175402.png"}}),t._v("\n5.    开机自启动")]),t._v(" "),n("ul",[n("li",[t._v("第一步：进入到/lib/systemd/system/目录\n"),n("ul",[n("li",[t._v("cd /lib/systemd/system/")])])]),t._v(" "),n("li",[t._v("创建nginx.service文件，并编辑\n"),n("ul",[n("li",[t._v("vim nginx.service")])])]),t._v(" "),n("li",[t._v("内容如下")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Unit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Description")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("nginx "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("service")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("After")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("network.target \n   \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("forking \n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecStart")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecReload")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx -s reload\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ExecStop")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("/usr/local/nginx/sbin/nginx -s quit\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PrivateTmp")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("true \n   \n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Install"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" \n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("WantedBy")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("multi-user.target\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 介绍")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Unit"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(":服务的说明\nDescription:描述服务\nAfter:描述服务类别\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("服务运行参数的设置\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("Type")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("forking是后台运行的形式\nExecStart为服务的具体运行命令\nExecReload为重启命令\nExecStop为停止命令\n"),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("PrivateTmp")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("True表示给服务分配独立的临时空间\n注意："),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Service"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("的启动、重启、停止命令全部要求使用绝对路径\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Install"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("运行级别下服务安装的相关设置，可设置为多用户，即系统运行级别为3\n\n\n")])])]),n("ol",{attrs:{start:"7"}},[n("li",[t._v("加入开机自启动")])]),t._v(" "),n("ul",[n("li",[t._v("systemctl enable nginx #开机启动")]),t._v(" "),n("li",[t._v("systemctl disable nginx #禁用开机启动")])]),t._v(" "),n("ol",{attrs:{start:"8"}},[n("li",[t._v("服务的启动/停止/刷新配置文件/查看状态")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl start nginx.service　         启动nginx服务")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl stop nginx.service　          停止服务")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl restart nginx.service　       重新启动服务")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl list-units --type=service     查看所有已启动的服务")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl status nginx.service          查看服务当前状态")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl enable nginx.service          设置开机自启动")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl disable nginx.service         停止开机自启动")]),t._v("\n")])])]),n("ol",{attrs:{start:"9"}},[n("li",[t._v("一个常见的错误")]),t._v(" "),n("li",[t._v("Warning: nginx.service changed on disk. Run 'systemctl daemon-reload' to reload units.")])]),t._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 直接按照提示执行命令systemctl daemon-reload 即可。")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# systemctl daemon-reload")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);